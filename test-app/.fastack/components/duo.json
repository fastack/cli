{
  ".fastack/root.js": {
    "id": ".fastack/root.js",
    "type": "js",
    "mtime": 1433272761000,
    "src": "require('live-reload')\nrequire('entry')\n",
    "deps": {
      "live-reload": "live-reload",
      "entry": "entry"
    },
    "entry": true
  },
  "live-reload": {
    "id": "live-reload",
    "src": "(function(){\n  // Inject socket.io client script (served by local server)\n  var liveReload = document.createElement('script');\n  liveReload.setAttribute('src','/socket.io/socket.io.js');\n  document.head.appendChild(liveReload);\n\n\n  liveReload.onload = function() {\n    var socket = io(window.location.origin);\n\n    socket.on('reload-page', function() {\n      location.reload();\n    })\n\n    socket.on('reload-css', function() {\n      // https://github.com/dbashford/mimosa-live-reload/blob/master/lib/assets/reload-client.js\n      setTimeout(function(){\n        var links = document.getElementsByTagName(\"link\");\n        for (var i = 0; i < links.length; i++) {\n          var tag = links[i];\n          if (tag.rel.toLowerCase().indexOf(\"stylesheet\") >= 0 && tag.href) {\n            var newHref = tag.href.replace(/(&|%5C?)\\d+/, \"\");\n            tag.href = newHref + (newHref.indexOf(\"?\") >= 0 ? \"&\" : \"?\") + (new Date().valueOf());\n          }\n        }\n      }, 150)\n    })\n  }\n\n})();\n",
    "entry": false,
    "include": true,
    "deps": {}
  },
  "entry": {
    "id": "entry",
    "src": "var uid = require('matthewmueller/uid');\n//\n// // alert('hello');\n",
    "entry": false,
    "include": true,
    "deps": {}
  },
  "root.css": {
    "id": "root.css",
    "type": "css",
    "mtime": 1433272381000,
    "src": "@import 'css/test.less';\n\nbody {\n  border: 5px solid blue;\n  padding: 30px;\n}\n",
    "deps": {
      "css/test.less": "css/test.less"
    },
    "entry": true
  },
  "css/test.less": {
    "id": "css/test.less",
    "type": "css",
    "mtime": 1433568870000,
    "src": "p {\n  font-size: 1em;\n}\n",
    "deps": {}
  },
  "source.js": {
    "id": "source.js",
    "type": "js",
    "mtime": 1433704871413,
    "src": "require('live-reload')\nvar uid = require('matthewmueller/uid');\n\n// alert(uid());\nrequire('./test.coffee')\n",
    "deps": {
      "live-reload": "live-reload",
      "matthewmueller/uid": ".fastack/components/matthewmueller-uid@0.0.2/index.js",
      "./test.coffee": "test.coffee"
    },
    "entry": true
  },
  ".fastack/components/matthewmueller-uid@0.0.2/index.js": {
    "id": ".fastack/components/matthewmueller-uid@0.0.2/index.js",
    "type": "js",
    "mtime": 1373931414000,
    "src": "/**\n * Export `uid`\n */\n\nmodule.exports = uid;\n\n/**\n * Create a `uid`\n *\n * @param {String} len\n * @return {String} uid\n */\n\nfunction uid(len) {\n  len = len || 7;\n  return Math.random().toString(35).substr(2, len);\n}\n",
    "deps": {}
  },
  "fastack-dev": {
    "id": "fastack-dev",
    "src": "require('live-reload')\n",
    "entry": false,
    "include": true,
    "deps": {}
  },
  "main.css": {
    "id": "main.css",
    "type": "css",
    "mtime": 1433569735000,
    "src": "@import 'css/test.less';\n\nbody {\n  border: 5px solid green;\n  padding: 30px;\n}\n",
    "deps": {
      "css/test.less": "css/test.less"
    },
    "entry": true
  },
  "test.coffee": {
    "id": "test.coffee",
    "type": "js",
    "mtime": 1433701471000,
    "src": "(function() {\n  var m, tpl;\n\n  console.log('Hello World from Coffee!');\n\n  require('./test-lib.js');\n\n  tpl = require('./template.jade');\n\n  m = tpl({\n    message: 'test'\n  });\n\n  console.log(m);\n\n}).call(this);\n",
    "deps": {
      "./test-lib.js": "test-lib.js",
      "./template.jade": "template.jade"
    }
  },
  "test-lib.js": {
    "id": "test-lib.js",
    "type": "js",
    "mtime": 1433698700000,
    "src": "console.log('Hello World from test-lib!')\n",
    "deps": {}
  },
  "template.jade": {
    "id": "template.jade",
    "type": "js",
    "mtime": 1433701261000,
    "src": "var jade = require('jade-runtime');\n\nmodule.exports = function template(locals) {\nvar buf = [];\nvar jade_mixins = {};\nvar jade_interp;\n\nbuf.push(\"<h1>This is a Jade Template!</h1><p>{{message}}</p>\");;return buf.join(\"\");\n};",
    "deps": {
      "jade-runtime": "jade-runtime"
    }
  },
  "jade-runtime": {
    "id": "jade-runtime",
    "src": "(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.jade = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\n/**\n * Merge two attribute objects giving precedence\n * to values in object `b`. Classes are special-cased\n * allowing for arrays and merging/joining appropriately\n * resulting in a string.\n *\n * @param {Object} a\n * @param {Object} b\n * @return {Object} a\n * @api private\n */\n\nexports.merge = function merge(a, b) {\n  if (arguments.length === 1) {\n    var attrs = a[0];\n    for (var i = 1; i < a.length; i++) {\n      attrs = merge(attrs, a[i]);\n    }\n    return attrs;\n  }\n  var ac = a['class'];\n  var bc = b['class'];\n\n  if (ac || bc) {\n    ac = ac || [];\n    bc = bc || [];\n    if (!Array.isArray(ac)) ac = [ac];\n    if (!Array.isArray(bc)) bc = [bc];\n    a['class'] = ac.concat(bc).filter(nulls);\n  }\n\n  for (var key in b) {\n    if (key != 'class') {\n      a[key] = b[key];\n    }\n  }\n\n  return a;\n};\n\n/**\n * Filter null `val`s.\n *\n * @param {*} val\n * @return {Boolean}\n * @api private\n */\n\nfunction nulls(val) {\n  return val != null && val !== '';\n}\n\n/**\n * join array as classes.\n *\n * @param {*} val\n * @return {String}\n */\nexports.joinClasses = joinClasses;\nfunction joinClasses(val) {\n  return (Array.isArray(val) ? val.map(joinClasses) :\n    (val && typeof val === 'object') ? Object.keys(val).filter(function (key) { return val[key]; }) :\n    [val]).filter(nulls).join(' ');\n}\n\n/**\n * Render the given classes.\n *\n * @param {Array} classes\n * @param {Array.<Boolean>} escaped\n * @return {String}\n */\nexports.cls = function cls(classes, escaped) {\n  var buf = [];\n  for (var i = 0; i < classes.length; i++) {\n    if (escaped && escaped[i]) {\n      buf.push(exports.escape(joinClasses([classes[i]])));\n    } else {\n      buf.push(joinClasses(classes[i]));\n    }\n  }\n  var text = joinClasses(buf);\n  if (text.length) {\n    return ' class=\"' + text + '\"';\n  } else {\n    return '';\n  }\n};\n\n\nexports.style = function (val) {\n  if (val && typeof val === 'object') {\n    return Object.keys(val).map(function (style) {\n      return style + ':' + val[style];\n    }).join(';');\n  } else {\n    return val;\n  }\n};\n/**\n * Render the given attribute.\n *\n * @param {String} key\n * @param {String} val\n * @param {Boolean} escaped\n * @param {Boolean} terse\n * @return {String}\n */\nexports.attr = function attr(key, val, escaped, terse) {\n  if (key === 'style') {\n    val = exports.style(val);\n  }\n  if ('boolean' == typeof val || null == val) {\n    if (val) {\n      return ' ' + (terse ? key : key + '=\"' + key + '\"');\n    } else {\n      return '';\n    }\n  } else if (0 == key.indexOf('data') && 'string' != typeof val) {\n    if (JSON.stringify(val).indexOf('&') !== -1) {\n      console.warn('Since Jade 2.0.0, ampersands (`&`) in data attributes ' +\n                   'will be escaped to `&amp;`');\n    };\n    if (val && typeof val.toISOString === 'function') {\n      console.warn('Jade will eliminate the double quotes around dates in ' +\n                   'ISO form after 2.0.0');\n    }\n    return ' ' + key + \"='\" + JSON.stringify(val).replace(/'/g, '&apos;') + \"'\";\n  } else if (escaped) {\n    if (val && typeof val.toISOString === 'function') {\n      console.warn('Jade will stringify dates in ISO form after 2.0.0');\n    }\n    return ' ' + key + '=\"' + exports.escape(val) + '\"';\n  } else {\n    if (val && typeof val.toISOString === 'function') {\n      console.warn('Jade will stringify dates in ISO form after 2.0.0');\n    }\n    return ' ' + key + '=\"' + val + '\"';\n  }\n};\n\n/**\n * Render the given attributes object.\n *\n * @param {Object} obj\n * @param {Object} escaped\n * @return {String}\n */\nexports.attrs = function attrs(obj, terse){\n  var buf = [];\n\n  var keys = Object.keys(obj);\n\n  if (keys.length) {\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i]\n        , val = obj[key];\n\n      if ('class' == key) {\n        if (val = joinClasses(val)) {\n          buf.push(' ' + key + '=\"' + val + '\"');\n        }\n      } else {\n        buf.push(exports.attr(key, val, false, terse));\n      }\n    }\n  }\n\n  return buf.join('');\n};\n\n/**\n * Escape the given string of `html`.\n *\n * @param {String} html\n * @return {String}\n * @api private\n */\n\nexports.escape = function escape(html){\n  var result = String(html)\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;');\n  if (result === '' + html) return html;\n  else return result;\n};\n\n/**\n * Re-throw the given `err` in context to the\n * the jade in `filename` at the given `lineno`.\n *\n * @param {Error} err\n * @param {String} filename\n * @param {String} lineno\n * @api private\n */\n\nexports.rethrow = function rethrow(err, filename, lineno, str){\n  if (!(err instanceof Error)) throw err;\n  if ((typeof window != 'undefined' || !filename) && !str) {\n    err.message += ' on line ' + lineno;\n    throw err;\n  }\n  try {\n    str = str || require('fs').readFileSync(filename, 'utf8')\n  } catch (ex) {\n    rethrow(err, null, lineno)\n  }\n  var context = 3\n    , lines = str.split('\\n')\n    , start = Math.max(lineno - context, 0)\n    , end = Math.min(lines.length, lineno + context);\n\n  // Error context\n  var context = lines.slice(start, end).map(function(line, i){\n    var curr = i + start + 1;\n    return (curr == lineno ? '  > ' : '    ')\n      + curr\n      + '| '\n      + line;\n  }).join('\\n');\n\n  // Alter exception message\n  err.path = filename;\n  err.message = (filename || 'Jade') + ':' + lineno\n    + '\\n' + context + '\\n\\n' + err.message;\n  throw err;\n};\n\nexports.DebugItem = function DebugItem(lineno, filename) {\n  this.lineno = lineno;\n  this.filename = filename;\n}\n\n},{\"fs\":2}],2:[function(require,module,exports){\n\n},{}]},{},[1])(1)\n});",
    "entry": false,
    "include": true,
    "deps": {}
  }
}